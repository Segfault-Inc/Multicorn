#!/usr/bin/env python

from __future__ import print_function

__doc__ = """
syapsefdw-ddl -- generate CREATE FOREIGN TABLE DDL for Syapse Foreign Data Wrappers

See PostgreSQL's FDW documentation and syapse.com.

License: PostgreSQL (http://www.postgresql.org/about/licence/)

2013-05-24 Reece Hart <reecehart@gmail.com>
"""

import argparse
import ConfigParser
import os
import sys

import IPython

root = os.path.dirname(os.path.dirname(__file__))
sys.path.insert(0, os.path.join(root,'python'))

from multicorn.syapsefdw import create_fdw


def parse_args(argv):
    ap = argparse.ArgumentParser(
        description = __doc__,
        formatter_class = argparse.ArgumentDefaultsHelpFormatter,
        )

    ap.add_argument('--conf-file', '-C',
                    metavar="FILE",
                    action = 'append',
                    required = True,
                    help="config file")
    ap.add_argument('--source', '-s',
                    metavar = 'CLASS_OR_QUERY',
                    type = unicode,
                    action = 'append',
                    required = True,
                    help = 'name of Syapse class or Saved Query (multiple okay)')

    return ap.parse_args( argv )
    


if __name__ == '__main__':
    opts = parse_args(sys.argv[1:])

    cp = ConfigParser.SafeConfigParser()
    for fn in opts.conf_file:
        cp.readfp(open(fn))

    for src in opts.source:
        fdw = create_fdw(
            syapse_hostname = cp.get('syapse','hostname'),
            syapse_email = cp.get('syapse','email'),
            syapse_password = cp.get('syapse','password'),
            source = src
            )
        print(fdw.table_ddl())
