#!/usr/bin/env python

from __future__ import print_function

__doc__ = """
syapsefdw-ddl -- generate CREATE FOREIGN TABLE DDL for Syapse Foreign Data Wrappers

See PostgreSQL's FDW documentation and syapse.com.

Example:
$ ./bin/syapsefdw-ddl -C ../support/syapsefdw.conf -s fdw:AnalysisJob -s fdw:AnalysisTask \
  -s fdw:Blood -s fdw:EnrichedLibrary -s fdw:Experiment -s fdw:GenomicSample \
  -s fdw:InstrumentRun -s fdw:Patient -s fdw:PooledLibrary -s fdw:PreReport \
  -s fdw:Study -s fdw:Workflow  >|../support/syapsefdw.sql
$ psql ../support/syapsefdw.sql

License: PostgreSQL (http://www.postgresql.org/about/licence/)

2013-05-24 Reece Hart <reecehart@gmail.com>
"""

import argparse
import ConfigParser
import logging
import os
import sys

import IPython

root = os.path.dirname(os.path.dirname(__file__))
sys.path.insert(0, os.path.join(root,'python'))

from multicorn.syapsefdw import SyapseFDWFactory


def parse_args(argv):
    ap = argparse.ArgumentParser(
        description = __doc__,
        formatter_class = argparse.ArgumentDefaultsHelpFormatter,
        )

    ap.add_argument('--conf-file', '-C',
                    metavar="FILE",
                    action = 'append',
                    required = True,
                    help="config file")
    ap.add_argument('--source', '-s',
                    metavar = 'CLASS_OR_QUERY',
                    type = unicode,
                    action = 'append',
                    required = True,
                    help = 'name of Syapse class or Saved Query (multiple okay)')

    return ap.parse_args( argv )
    


if __name__ == '__main__':
    logging.basicConfig(level = logging.INFO)

    opts = parse_args(sys.argv[1:])

    cp = ConfigParser.SafeConfigParser()
    for fn in opts.conf_file:
        cp.readfp(open(fn))

    for src in opts.source:
        fdw = SyapseFDWFactory(
            options = {
                'syapse_hostname' : cp.get('syapse','hostname'),
                'syapse_email'    : cp.get('syapse','email'),
                'syapse_password' : cp.get('syapse','password'),
                'source'          : src
                },
            columns = {}
            )
        print(fdw.table_ddl())
